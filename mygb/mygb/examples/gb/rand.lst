                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.2.1 Sat Oct 18 12:49:21 2014
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc104320
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _gets
                             13 	.globl _puts
                             14 	.globl _sprintf
                             15 	.globl _printf
                             16 	.globl _putchar
                             17 	.globl _color
                             18 	.globl _gotogxy
                             19 	.globl _wrtchr
                             20 	.globl _getpix
                             21 	.globl _circle
                             22 	.globl _box
                             23 	.globl _line
                             24 	.globl _draw_image
                             25 	.globl _switch_data
                             26 	.globl _plot_point
                             27 	.globl _plot
                             28 	.globl _gprintf
                             29 	.globl _gprintn
                             30 	.globl _gprintln
                             31 	.globl _gprint
                             32 	.globl _arand
                             33 	.globl _initarand
                             34 	.globl _randw
                             35 	.globl _rand
                             36 	.globl _initrand
                             37 	.globl _get_tiles
                             38 	.globl _set_tiles
                             39 	.globl _get_data
                             40 	.globl _set_data
                             41 	.globl _scroll_sprite
                             42 	.globl _move_sprite
                             43 	.globl _get_sprite_prop
                             44 	.globl _set_sprite_prop
                             45 	.globl _get_sprite_tile
                             46 	.globl _set_sprite_tile
                             47 	.globl _get_sprite_data
                             48 	.globl _set_sprite_data
                             49 	.globl _scroll_win
                             50 	.globl _move_win
                             51 	.globl _get_win_tiles
                             52 	.globl _set_win_tiles
                             53 	.globl _set_win_data
                             54 	.globl _scroll_bkg
                             55 	.globl _move_bkg
                             56 	.globl _get_bkg_tiles
                             57 	.globl _set_bkg_tiles
                             58 	.globl _set_bkg_data
                             59 	.globl _hiramcpy
                             60 	.globl _display_off
                             61 	.globl _wait_vbl_done
                             62 	.globl _reset
                             63 	.globl _set_interrupts
                             64 	.globl _disable_interrupts
                             65 	.globl _enable_interrupts
                             66 	.globl _waitpadup
                             67 	.globl _waitpad
                             68 	.globl _joypad
                             69 	.globl _delay
                             70 	.globl _receive_byte
                             71 	.globl _send_byte
                             72 	.globl _get_mode
                             73 	.globl _mode
                             74 	.globl _add_TIM
                             75 	.globl _add_LCD
                             76 	.globl _add_VBL
                             77 	.globl _remove_JOY
                             78 	.globl _remove_SIO
                             79 	.globl _remove_TIM
                             80 	.globl _remove_LCD
                             81 	.globl _remove_VBL
                             82 	.globl _cgb_compatibility
                             83 	.globl _cpu_fast
                             84 	.globl _cpu_slow
                             85 	.globl _set_sprite_palette_entry
                             86 	.globl _set_bkg_palette_entry
                             87 	.globl _set_sprite_palette
                             88 	.globl _set_bkg_palette
                             89 	.globl _sgb_check
                             90 	.globl _seed
                             91 	.globl _accua
                             92 	.globl _accu
                             93 ;--------------------------------------------------------
                             94 ; Externals used
                             95 ;--------------------------------------------------------
                             96 	.globl _IE_REG
                             97 	.globl _SVBK_REG
                             98 	.globl _OCPD_REG
                             99 	.globl _OCPS_REG
                            100 	.globl _BCPD_REG
                            101 	.globl _BCPS_REG
                            102 	.globl _RP_REG
                            103 	.globl _HDMA5_REG
                            104 	.globl _HDMA4_REG
                            105 	.globl _HDMA3_REG
                            106 	.globl _HDMA2_REG
                            107 	.globl _HDMA1_REG
                            108 	.globl _VBK_REG
                            109 	.globl _KEY1_REG
                            110 	.globl _WX_REG
                            111 	.globl _WY_REG
                            112 	.globl _OBP1_REG
                            113 	.globl _OBP0_REG
                            114 	.globl _BGP_REG
                            115 	.globl _DMA_REG
                            116 	.globl _LYC_REG
                            117 	.globl _LY_REG
                            118 	.globl _SCX_REG
                            119 	.globl _SCY_REG
                            120 	.globl _STAT_REG
                            121 	.globl _LCDC_REG
                            122 	.globl _NR52_REG
                            123 	.globl _NR51_REG
                            124 	.globl _NR50_REG
                            125 	.globl _NR44_REG
                            126 	.globl _NR43_REG
                            127 	.globl _NR42_REG
                            128 	.globl _NR41_REG
                            129 	.globl _NR34_REG
                            130 	.globl _NR33_REG
                            131 	.globl _NR32_REG
                            132 	.globl _NR31_REG
                            133 	.globl _NR30_REG
                            134 	.globl _NR24_REG
                            135 	.globl _NR23_REG
                            136 	.globl _NR22_REG
                            137 	.globl _NR21_REG
                            138 	.globl _NR14_REG
                            139 	.globl _NR13_REG
                            140 	.globl _NR12_REG
                            141 	.globl _NR11_REG
                            142 	.globl _NR10_REG
                            143 	.globl _IF_REG
                            144 	.globl _TAC_REG
                            145 	.globl _TMA_REG
                            146 	.globl _TIMA_REG
                            147 	.globl _DIV_REG
                            148 	.globl _SC_REG
                            149 	.globl _SB_REG
                            150 	.globl _P1_REG
                            151 	.globl __io_out
                            152 	.globl __io_in
                            153 	.globl __io_status
                            154 	.globl _sys_time
                            155 	.globl __cpu
                            156 ;--------------------------------------------------------
                            157 ; special function registers
                            158 ;--------------------------------------------------------
                            159 ;--------------------------------------------------------
                            160 ; special function bits 
                            161 ;--------------------------------------------------------
                            162 ;--------------------------------------------------------
                            163 ; internal ram data
                            164 ;--------------------------------------------------------
                            165 	.area _DATA
   0000                     166 _accu::
   0000                     167 	.ds 80
   0050                     168 _accua::
   0050                     169 	.ds 80
   00A0                     170 _seed::
   00A0                     171 	.ds 2
                            172 ;--------------------------------------------------------
                            173 ; overlayable items in internal ram 
                            174 ;--------------------------------------------------------
                            175 	.area _OVERLAY
                            176 ;--------------------------------------------------------
                            177 ; indirectly addressable internal ram data
                            178 ;--------------------------------------------------------
                            179 	.area _ISEG
                            180 ;--------------------------------------------------------
                            181 ; bit data
                            182 ;--------------------------------------------------------
                            183 	.area _BSEG
                            184 ;--------------------------------------------------------
                            185 ; external ram data
                            186 ;--------------------------------------------------------
                            187 	.area _XSEG
                            188 ;--------------------------------------------------------
                            189 ; global & static initialisations
                            190 ;--------------------------------------------------------
                            191 	.area _GSINIT
                            192 	.area _GSFINAL
                            193 	.area _GSINIT
                            194 ;--------------------------------------------------------
                            195 ; code
                            196 ;--------------------------------------------------------
                            197 	.area _CODE
                            198 ;	rand.c 23
                            199 ; genLabel
                            200 ; genFunction
                            201 ;	---------------------------------
                            202 ; Function main
                            203 ; ---------------------------------
   0000                     204 ___main_start:
   0000                     205 _main:
   0000 C5                  206 	push	bc
   0001 E8 F7               207 	lda sp,-9(sp)
                            208 ;	rand.c 27
                            209 ; genAssign
                            210 ; AOP_STK for _main_r_1_1
   0003 F8 08               211 	lda	hl,8(sp)
   0005 36 00               212 	ld	(hl),#0x00 ; 3
                            213 ; genLabel
   0007                     214 00109$:
                            215 ; genCmpEq
                            216 ; AOP_STK for _main_r_1_1
   0007 F8 08               217 	lda	hl,8(sp)
   0009 7E                  218 	ld	a,(hl) ; 2
   000A FE 50               219 	cp	a,#0x50
                            220 ; Rule 5
   000C CA 2D 00            221 	jp	z,00112$
   000F                     222 00121$:
                            223 ;	rand.c 28
                            224 ; genPlus
                            225 ; AOP_STK for _main_r_1_1
   000F 3E 00               226 	ld	a,#<_accu
   0011 F8 08               227 	lda	hl,8(sp)
   0013 86                  228 	add	a,(hl)
   0014 5F                  229 	ld	e,a
   0015 3E 00               230 	ld	a,#>_accu
   0017 CE 00               231 	adc	a,#0x00
   0019 57                  232 	ld	d,a
                            233 ; genAssign (pointer)
   001A 3E 00               234 	ld	a,#0x00
   001C 12                  235 	ld	(de),a
                            236 ;	rand.c 29
                            237 ; genPlus
                            238 ; AOP_STK for _main_r_1_1
   001D 3E 50               239 	ld	a,#<_accua
   001F 86                  240 	add	a,(hl)
   0020 5F                  241 	ld	e,a
   0021 3E 00               242 	ld	a,#>_accua
   0023 CE 00               243 	adc	a,#0x00
   0025 57                  244 	ld	d,a
                            245 ; genAssign (pointer)
   0026 3E 00               246 	ld	a,#0x00
   0028 12                  247 	ld	(de),a
                            248 ;	rand.c 27
                            249 ; genPlus
                            250 ; AOP_STK for _main_r_1_1
                            251 ; genPlusIncr
   0029 34                  252 	inc	(hl)
                            253 ; genGoto
   002A C3 07 00            254 	jp	00109$
                            255 ; genLabel
   002D                     256 00112$:
                            257 ;	rand.c 33
                            258 ; genIpush
   002D 21 39 01            259 	ld	hl,#__str_0 + 0
   0030 E5                  260 	push	hl
                            261 ; genCall
   0031 CD 00 00            262 	call	_puts
   0034 E8 02               263 	lda	sp,2(sp)
                            264 ;	rand.c 34
                            265 ; genIpush
   0036 21 46 01            266 	ld	hl,#__str_1 + 0
   0039 E5                  267 	push	hl
                            268 ; genCall
   003A CD 00 00            269 	call	_puts
   003D E8 02               270 	lda	sp,2(sp)
                            271 ;	rand.c 35
                            272 ; genIpush
   003F 3E FF               273 	ld	a,#0xFF
   0041 F5                  274 	push	af
   0042 33                  275 	inc	sp
                            276 ; genCall
   0043 CD 00 00            277 	call	_waitpad
   0046 E8 01               278 	lda	sp,1(sp)
                            279 ;	rand.c 36
                            280 ; genCall
   0048 CD 00 00            281 	call	_waitpadup
                            282 ;	rand.c 37
                            283 ; genCast
                            284 ; AOP_SFR for _DIV_REG
                            285 ; AOP_HL for _seed
   004B F0 00               286 	ldh	a,(_DIV_REG+0) ; x
   004D 21 A0 00            287 	ld	hl,#_seed + 0
   0050 77                  288 	ld	(hl),a
   0051 21 A1 00            289 	ld	hl,#_seed + 1
   0054 36 00               290 	ld	(hl),#0x00
                            291 ;	rand.c 38
                            292 ; genIpush
   0056 21 57 01            293 	ld	hl,#__str_2 + 0
   0059 E5                  294 	push	hl
                            295 ; genCall
   005A CD 00 00            296 	call	_puts
   005D E8 02               297 	lda	sp,2(sp)
                            298 ;	rand.c 39
                            299 ; genIpush
   005F 3E FF               300 	ld	a,#0xFF
   0061 F5                  301 	push	af
   0062 33                  302 	inc	sp
                            303 ; genCall
   0063 CD 00 00            304 	call	_waitpad
   0066 E8 01               305 	lda	sp,1(sp)
                            306 ;	rand.c 40
                            307 ; genCall
   0068 CD 00 00            308 	call	_waitpadup
                            309 ;	rand.c 41
                            310 ; genCast
                            311 ; AOP_SFR for _DIV_REG
   006B F0 00               312 	ldh	a,(_DIV_REG+0) ; x
   006D 47                  313 	ld	b,a
   006E 0E 00               314 	ld	c,#0x00
                            315 ; genLeftShift
   0070 48                  316 	ld	c,b
   0071 06 00               317 	ld	b,#0x00
   0073 06 00               318 	ld	b,#0x00
                            319 ; genOr
                            320 ; AOP_HL for _seed
                            321 ; Type res[10] = l[10]&r[2]
                            322 ; Size res[2] = l[2]&r[2]
   0075 21 A0 00            323 	ld	hl,#_seed + 0
   0078 7E                  324 	ld	a,(hl)
   0079 B0                  325 	or	a,b
   007A 77                  326 	ld	(hl),a
   007B 21 A1 00            327 	ld	hl,#_seed + 1
   007E 7E                  328 	ld	a,(hl)
   007F B1                  329 	or	a,c
   0080 77                  330 	ld	(hl),a
                            331 ;	rand.c 44
                            332 ; genIpush
                            333 ; AOP_HL for _seed
   0081 21 A0 00            334 	ld	hl,#_seed + 0
   0084 2A                  335 	ld	a,(hl+)
   0085 66                  336 	ld	h,(hl)
   0086 6F                  337 	ld	l,a
   0087 E5                  338 	push	hl
                            339 ; genCall
   0088 CD 00 00            340 	call	_initarand
   008B E8 02               341 	lda	sp,2(sp)
                            342 ;	rand.c 46
                            343 ; genLabel
   008D                     344 00106$:
                            345 ;	rand.c 47
                            346 ; genCall
   008D CD 00 00            347 	call	_rand
                            348 ; AOP_STK for _main_r_1_1
   0090 F8 08               349 	lda	hl,8(sp)
   0092 73                  350 	ld	(hl),e ; 3
                            351 ;	rand.c 48
                            352 ; genCall
   0093 CD 00 00            353 	call	_arand
                            354 ; AOP_STK for _main_s_1_1
   0096 F8 07               355 	lda	hl,7(sp)
   0098 73                  356 	ld	(hl),e ; 3
                            357 ;	rand.c 50
                            358 ; genCmpLt
                            359 ; AOP_STK for _main_r_1_1
   0099 23                  360 	inc	hl
   009A 7E                  361 	ld	a,(hl)
   009B FE 50               362 	cp	#0x50
   009D D2 DA 00            363 	jp	nc,00102$
                            364 ;	rand.c 51
                            365 ; genPlus
                            366 ; AOP_STK for _main_r_1_1
                            367 ; AOP_STK for _main_sloc1_1_0
   00A0 3E 00               368 	ld	a,#<_accu
   00A2 86                  369 	add	a,(hl)
   00A3 F8 02               370 	lda	hl,2(sp)
   00A5 77                  371 	ld	(hl),a ; 3
   00A6 3E 00               372 	ld	a,#>_accu
   00A8 CE 00               373 	adc	a,#0x00
   00AA 23                  374 	inc	hl
   00AB 77                  375 	ld	(hl),a ; 3
                            376 ; genPointerGet
                            377 ; AOP_STK for _main_sloc1_1_0
                            378 ; AOP_STK for _main_sloc0_1_0
   00AC 2B                  379 	dec	hl
   00AD 5E                  380 	ld	e,(hl)
   00AE 23                  381 	inc	hl
   00AF 56                  382 	ld	d,(hl)
   00B0 1A                  383 	ld	a,(de)
   00B1 23                  384 	inc	hl
   00B2 77                  385 	ld	(hl),a ; 3
                            386 ; genPlus
                            387 ; AOP_STK for _main_sloc0_1_0
                            388 ; genPlusIncr
   00B3 7E                  389 	ld	a,(hl)
   00B4 C6 01               390 	add	a,#0x01
   00B6 4F                  391 	ld	c,a
                            392 ; genAssign (pointer)
                            393 ; AOP_STK for _main_sloc1_1_0
   00B7 2B                  394 	dec	hl
   00B8 2B                  395 	dec	hl
   00B9 5E                  396 	ld	e,(hl)
   00BA 23                  397 	inc	hl
   00BB 56                  398 	ld	d,(hl)
   00BC 79                  399 	ld	a,c
   00BD 12                  400 	ld	(de),a
                            401 ; genAssign
                            402 ; AOP_STK for _main_t_1_1
   00BE F8 06               403 	lda	hl,6(sp)
   00C0 71                  404 	ld	(hl),c ; 3
                            405 ;	rand.c 52
                            406 ; genMinus
                            407 ; AOP_STK for _main_t_1_1
   00C1 3E 90               408 	ld	a,#0x90
   00C3 96                  409 	sub	a,(hl)
   00C4 47                  410 	ld	b,a
                            411 ; genIpush
   00C5 3E 00               412 	ld	a,#0x00
   00C7 F5                  413 	push	af
   00C8 33                  414 	inc	sp
                            415 ; genIpush
   00C9 3E 01               416 	ld	a,#0x01
   00CB F5                  417 	push	af
   00CC 33                  418 	inc	sp
                            419 ; genIpush
   00CD 78                  420 	ld	a,b
   00CE F5                  421 	push	af
   00CF 33                  422 	inc	sp
                            423 ; genIpush
                            424 ; AOP_STK for _main_r_1_1
   00D0 23                  425 	inc	hl
   00D1 23                  426 	inc	hl
   00D2 7E                  427 	ld	a,(hl)
   00D3 F5                  428 	push	af
   00D4 33                  429 	inc	sp
                            430 ; genCall
   00D5 CD 00 00            431 	call	_plot
   00D8 E8 04               432 	lda	sp,4(sp)
                            433 ; genLabel
   00DA                     434 00102$:
                            435 ;	rand.c 54
                            436 ; genCmpLt
                            437 ; AOP_STK for _main_s_1_1
   00DA F8 07               438 	lda	hl,7(sp)
   00DC 7E                  439 	ld	a,(hl)
   00DD FE 50               440 	cp	#0x50
   00DF D2 20 01            441 	jp	nc,00107$
                            442 ;	rand.c 55
                            443 ; genPlus
                            444 ; AOP_STK for _main_s_1_1
                            445 ; AOP_STK for _main_sloc2_1_0
   00E2 3E 50               446 	ld	a,#<_accua
   00E4 86                  447 	add	a,(hl)
   00E5 F8 00               448 	lda	hl,0(sp)
   00E7 77                  449 	ld	(hl),a ; 3
   00E8 3E 00               450 	ld	a,#>_accua
   00EA CE 00               451 	adc	a,#0x00
   00EC 23                  452 	inc	hl
   00ED 77                  453 	ld	(hl),a ; 3
                            454 ; genPointerGet
                            455 ; AOP_STK for _main_sloc2_1_0
                            456 ; AOP_STK for _main_sloc1_1_0
   00EE 2B                  457 	dec	hl
   00EF 5E                  458 	ld	e,(hl)
   00F0 23                  459 	inc	hl
   00F1 56                  460 	ld	d,(hl)
   00F2 1A                  461 	ld	a,(de)
   00F3 23                  462 	inc	hl
   00F4 77                  463 	ld	(hl),a ; 3
                            464 ; genPlus
                            465 ; AOP_STK for _main_sloc1_1_0
                            466 ; genPlusIncr
   00F5 7E                  467 	ld	a,(hl)
   00F6 C6 01               468 	add	a,#0x01
   00F8 4F                  469 	ld	c,a
                            470 ; genAssign (pointer)
                            471 ; AOP_STK for _main_sloc2_1_0
   00F9 2B                  472 	dec	hl
   00FA 2B                  473 	dec	hl
   00FB 5E                  474 	ld	e,(hl)
   00FC 23                  475 	inc	hl
   00FD 56                  476 	ld	d,(hl)
   00FE 79                  477 	ld	a,c
   00FF 12                  478 	ld	(de),a
                            479 ; genAssign
                            480 ; AOP_STK for _main_u_1_1
   0100 F8 05               481 	lda	hl,5(sp)
   0102 71                  482 	ld	(hl),c ; 3
                            483 ;	rand.c 56
                            484 ; genMinus
                            485 ; AOP_STK for _main_u_1_1
   0103 3E 90               486 	ld	a,#0x90
   0105 96                  487 	sub	a,(hl)
   0106 47                  488 	ld	b,a
                            489 ; genPlus
                            490 ; AOP_STK for _main_s_1_1
                            491 ; genPlusIncr
   0107 23                  492 	inc	hl
   0108 23                  493 	inc	hl
   0109 7E                  494 	ld	a,(hl)
   010A C6 50               495 	add	a,#0x50
   010C 4F                  496 	ld	c,a
                            497 ; genIpush
   010D 3E 00               498 	ld	a,#0x00
   010F F5                  499 	push	af
   0110 33                  500 	inc	sp
                            501 ; genIpush
   0111 3E 02               502 	ld	a,#0x02
   0113 F5                  503 	push	af
   0114 33                  504 	inc	sp
                            505 ; genIpush
   0115 78                  506 	ld	a,b
   0116 F5                  507 	push	af
   0117 33                  508 	inc	sp
                            509 ; genIpush
   0118 79                  510 	ld	a,c
   0119 F5                  511 	push	af
   011A 33                  512 	inc	sp
                            513 ; genCall
   011B CD 00 00            514 	call	_plot
   011E E8 04               515 	lda	sp,4(sp)
                            516 ; genLabel
   0120                     517 00107$:
                            518 ;	rand.c 59
                            519 ; genCmpEq
                            520 ; AOP_STK for _main_t_1_1
   0120 F8 06               521 	lda	hl,6(sp)
   0122 7E                  522 	ld	a,(hl) ; 2
   0123 FE 90               523 	cp	a,#0x90
                            524 ; Rule 5
   0125 CA 35 01            525 	jp	z,00113$
   0128                     526 00122$:
                            527 ; genCmpEq
                            528 ; AOP_STK for _main_u_1_1
   0128 F8 05               529 	lda	hl,5(sp)
   012A 7E                  530 	ld	a,(hl) ; 2
   012B FE 90               531 	cp	a,#0x90
   012D C2 32 01            532 	jp	nz,00123$
   0130 18 03               533 	jr	00124$
   0132                     534 00123$:
   0132 C3 8D 00            535 	jp	00106$
   0135                     536 00124$:
                            537 ; genLabel
   0135                     538 00113$:
                            539 ; genEndFunction
   0135 E8 09               540 	lda	sp,9(sp)
   0137 C1                  541 	pop bc
   0138 C9                  542 	ret
   0139                     543 ___main_end:
                            544 	.area _CODE
   0139                     545 __str_0:
   0139 47 65 74 74 69 6E   546 	.ascii "Getting seed"
        67 20 73 65 65 64
   0145 00                  547 	.db 0
   0146                     548 __str_1:
   0146 50 75 73 68 20 61   549 	.ascii "Push any key (1)"
        6E 79 20 6B 65 79
        20 28 31 29
   0156 00                  550 	.db 0
   0157                     551 __str_2:
   0157 50 75 73 68 20 61   552 	.ascii "Push any key (2)"
        6E 79 20 6B 65 79
        20 28 32 29
   0167 00                  553 	.db 0
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

    _BCPD_REG                          **** GX
    _BCPS_REG                          **** GX
    _BGP_REG                           **** GX
    _DIV_REG                           **** GX
    _DMA_REG                           **** GX
    _HDMA1_REG                         **** GX
    _HDMA2_REG                         **** GX
    _HDMA3_REG                         **** GX
    _HDMA4_REG                         **** GX
    _HDMA5_REG                         **** GX
    _IE_REG                            **** GX
    _IF_REG                            **** GX
    _KEY1_REG                          **** GX
    _LCDC_REG                          **** GX
    _LYC_REG                           **** GX
    _LY_REG                            **** GX
    _NR10_REG                          **** GX
    _NR11_REG                          **** GX
    _NR12_REG                          **** GX
    _NR13_REG                          **** GX
    _NR14_REG                          **** GX
    _NR21_REG                          **** GX
    _NR22_REG                          **** GX
    _NR23_REG                          **** GX
    _NR24_REG                          **** GX
    _NR30_REG                          **** GX
    _NR31_REG                          **** GX
    _NR32_REG                          **** GX
    _NR33_REG                          **** GX
    _NR34_REG                          **** GX
    _NR41_REG                          **** GX
    _NR42_REG                          **** GX
    _NR43_REG                          **** GX
    _NR44_REG                          **** GX
    _NR50_REG                          **** GX
    _NR51_REG                          **** GX
    _NR52_REG                          **** GX
    _OBP0_REG                          **** GX
    _OBP1_REG                          **** GX
    _OCPD_REG                          **** GX
    _OCPS_REG                          **** GX
    _P1_REG                            **** GX
    _RP_REG                            **** GX
    _SB_REG                            **** GX
    _SCX_REG                           **** GX
    _SCY_REG                           **** GX
    _SC_REG                            **** GX
    _STAT_REG                          **** GX
    _SVBK_REG                          **** GX
    _TAC_REG                           **** GX
    _TIMA_REG                          **** GX
    _TMA_REG                           **** GX
    _VBK_REG                           **** GX
    _WX_REG                            **** GX
    _WY_REG                            **** GX
  0 ___main_end                        0139 R
  0 ___main_start                      0000 R
    __cpu                              **** GX
    __io_in                            **** GX
    __io_out                           **** GX
    __io_status                        **** GX
  0 __str_0                            0139 R
  0 __str_1                            0146 R
  0 __str_2                            0157 R
  1 _accu                              0000 GR
  1 _accua                             0050 GR
    _add_LCD                           **** GX
    _add_TIM                           **** GX
    _add_VBL                           **** GX
    _arand                             **** GX
    _box                               **** GX
    _cgb_compatibility                 **** GX
    _circle                            **** GX
    _color                             **** GX
    _cpu_fast                          **** GX
    _cpu_slow                          **** GX
    _delay                             **** GX
    _disable_interrupts                **** GX
    _display_off                       **** GX
    _draw_image                        **** GX
    _enable_interrupts                 **** GX
    _get_bkg_tiles                     **** GX
    _get_data                          **** GX
    _get_mode                          **** GX
    _get_sprite_data                   **** GX
    _get_sprite_prop                   **** GX
    _get_sprite_tile                   **** GX
    _get_tiles                         **** GX
    _get_win_tiles                     **** GX
    _getpix                            **** GX
    _gets                              **** GX
    _gotogxy                           **** GX
    _gprint                            **** GX
    _gprintf                           **** GX
    _gprintln                          **** GX
    _gprintn                           **** GX
    _hiramcpy                          **** GX
    _initarand                         **** GX
    _initrand                          **** GX
    _joypad                            **** GX
    _line                              **** GX
  0 _main                              0000 GR
    _mode                              **** GX
    _move_bkg                          **** GX
    _move_sprite                       **** GX
    _move_win                          **** GX
    _plot                              **** GX
    _plot_point                        **** GX
    _printf                            **** GX
    _putchar                           **** GX
    _puts                              **** GX
    _rand                              **** GX
    _randw                             **** GX
    _receive_byte                      **** GX
    _remove_JOY                        **** GX
    _remove_LCD                        **** GX
    _remove_SIO                        **** GX
    _remove_TIM                        **** GX
    _remove_VBL                        **** GX
    _reset                             **** GX
    _scroll_bkg                        **** GX
    _scroll_sprite                     **** GX
    _scroll_win                        **** GX
  1 _seed                              00A0 GR
    _send_byte                         **** GX
    _set_bkg_data                      **** GX
    _set_bkg_palette                   **** GX
    _set_bkg_palette_entry             **** GX
    _set_bkg_tiles                     **** GX
    _set_data                          **** GX
    _set_interrupts                    **** GX
    _set_sprite_data                   **** GX
    _set_sprite_palette                **** GX
    _set_sprite_palette_entry          **** GX
    _set_sprite_prop                   **** GX
    _set_sprite_tile                   **** GX
    _set_tiles                         **** GX
    _set_win_data                      **** GX
    _set_win_tiles                     **** GX
    _sgb_check                         **** GX
    _sprintf                           **** GX
    _switch_data                       **** GX
    _sys_time                          **** GX
    _wait_vbl_done                     **** GX
    _waitpad                           **** GX
    _waitpadup                         **** GX
    _wrtchr                            **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  168   flags 0
   1 _DATA                              size   A2   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    0   flags 0
   7 _GSFINAL                           size    0   flags 0
